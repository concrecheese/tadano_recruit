/* button -------------------------------------------------- */

/* button common */
.btn {
	@include fs-btn();
	@include ff-jp();

	display: block;
	margin-right: auto;
	margin-left: auto;
	font-size: 1.2rem; //親でサイズを決めると、textのlineHeightCropが想像通りに機能する
	cursor: pointer;
}

.btn_text {
	@include lineHeightCrop(1.8);
}

//リンクの中は中心揃え
.btn_link {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 100%;
}

//アイコンの位置
.btn_icon {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	margin-left: 0.2em; //
	fill: currentColor;

	//アイコンフォント
	span {
		font-size: 1.2em;
	}
}

//ボックス
.btnBox {
	display: block;
	// position: relative;
	width: 100%;
	max-width: rem(400); //これがボタンのサイズ
	margin-top: rem(56); //今回のマージン
	margin-right: auto;
	margin-left: auto;
	text-align: center;
	transition: 200ms;
	transition-timing-function: ease;
	transform: translateY(0);

	&:hover {
		transform: translateY(-3%);
	}

	@include mq() {
		margin-top: rem(72); //今回のマージン
	}
}

//horoのボックス
.btnBox.-hero {
	max-width: rem(800); //フルサイズ
	margin-top: rem(24);
	margin-left: 0;

	@include mq() {
		margin-top: rem(40);
	}

	@include mq(lg) {
		margin-top: rem(8);
	}
}

//--------------------------------------------------

/* button primary */

//ホバー時のボタンデザイン
.btn.-primary {
	position: relative;
	width: 100%; //基本フルサイズのボタンサイズはラップで
	margin-top: rem(16); //今回の
	color: #fff;
	text-align: center;
	background-color: $cl-point;
	transition: 200ms;
	transition-timing-function: ease; //特にこだわらないならeaseが一番気持ち良い
	transform: translateY(0);

	//通常のボタンデザイン(ホバーで透明にできる)
	&::before {
		position: absolute;
		top: 0;
		left: 0;
		display: block;
		width: 100%;
		height: 100%;
		content: '';
		background-color: $cl-key;
		opacity: 1;
		transition: 200ms;
		transition-timing-function: ease;
	}

	//ホバー
	.btnBox:hover & {
		@include shadow-key($size: rem(30), $opacity: 0.5);

		//通常のボタンデザイン
		&::before {
			opacity: 0;
		}
	}

	//a
	.btn_link {
		position: relative; //zindex
		padding: 1.2em 1.6em;
	}
}

// /* button scroll */
// .btn.-scroll {
// 	max-width: rem(240);
// 	font-size: 0.8em;
// 	font-weight: 400;
// 	line-height: 1;
// 	color: #fff;
// 	background-color: $cl-black;
// 	border-radius: 10em;
// 	transition: 300ms; //hover
// 	animation-name: pleaseScroll;
// 	animation-duration: 2s; //かかる時間
// 	animation-play-state: running; //再生・停止 runningは通常状態
// 	animation-timing-function: ease-in-out;
// 	animation-delay: 2s; //2秒遅れて発火
// 	animation-iteration-count: infinite; //繰り返し回数。ループにしたいならinfiniteを。
// 	// animation-direction: ; //再生方向。順方向と逆方向の繰り返しがalternate。
// 	animation-fill-mode: both; //forwards:終了時をアニメ指定同じに backwards:開始時を同。bothは両方(便利)。

// 	//キーフレーム
// 	@keyframes pleaseScroll {
// 		0% {
// 			transform: translateY(-10%);
// 		}
// 		50% {
// 			transform: translateY(10%);
// 		}
// 		100% {
// 			transform: translateY(-10%);
// 		}
// 	}

// 	@include mq() {
// 		max-width: rem(320);
// 	}

// 	.btn_link {
// 		display: flex;
// 		flex-flow: row nowrap;
// 		align-items: center;
// 		justify-content: center;
// 		height: 100%;
// 		padding: 1.2em 2.2em;
// 	}

// 	.btn_text {
// 		margin-right: auto;
// 		white-space: nowrap;
// 	}

// 	.btn_icon {
// 	}

// 	&:hover {
// 		background-color: $cl-key;
// 	}
// }
